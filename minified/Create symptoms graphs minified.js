var sourceEntries,workingEntries,entryDate,fileDate=new DATE(new Date).dateStamp,backup=file("/storage/emulated/0/memento/Symptoms graph/Backup/Backup "+fileDate+".txt"),dstLog=file("/storage/emulated/0/memento/Symptoms graph/dstLog.txt"),graphLibrary=libByName("Symptoms graphing"),symptomEntries=[],arDataToGraph=[],strBackup="",graphChar="+";function createAllSymptomGraphs(t,e){return log("createAllSymptomGraphs called"),entryDate=t,readSymptoms(e),createGraphEntries(),backup.close(),log("graph entries created"),"Graph entries created"}function readSymptoms(t){log("readSymptoms:\n"+JSON.stringify(t)),(sourceEntries=libByName(t[0].library).entries()).map((t,e)=>{symptomEntries.push({i:e,date:t.field("Date stamp")})}),symptomEntries=symptomEntries.sort((t,e)=>t.date>e.date?-1:1),t.map(t=>{graph=createSymptomGraph(t.symptom,t.edit),log("readSymptoms: obj.symptom: "+t.symptom),arDataToGraph.push({Library:t.library,Date:fileDate,Symptom:t.symptom,Graph:graph.graph,Log:graph.log})})}function createGraphEntries(){arDataToGraph.map(t=>{graphLibrary.create(t),strBackup+="*"+t.Symptom+"\n\n"+t.Log+"\n\n"}),backup.write(strBackup)}function createSymptomGraph(t,e){var a,r,p,m,n="",s="";log("\ncreateSymptomGraph: edit: "+e);var i=t.replace(/\*/g,"\\*"),o=new RegExp("("+i+")( i([0-5]))?(.*)?");s+=o+"\n",p=e.match(/Â£\s*(?=(\d*))/)[1],log("\ncreateSymptomGraph: stepBack: "+p+'stepBack == ""'+(""==p)),""==p?(log("\ncreateSymptomGraph: no valid stepBack, defaulting"),m=DATE_dateSubtract(new DATE(entryDate),2).dateStamp):(log("\ncreateSymptomGraph: valid stepBack"),m=DATE_dateSubtract(new DATE(entryDate),p).dateStamp),workingEntries=symptomEntries.filter(t=>{if(t.date>m)return t}),log("\ncreateSymptomGraph: stepBack: "+JSON.stringify(p)+"\nstartDate: "+m+"workingEntries:\n"+JSON.stringify(workingEntries));for(var l=0;l<workingEntries.length;++l)null==(a=(r=sourceEntries[workingEntries[l].i]).field("Symptoms - current").match(o))?(n+=r.field("Date stamp")+"\n",s+=r.field("Date stamp")+"\n"):null!=a[4]&&""!=a[4].trim()?(n+=r.field("Date stamp")+" ERROR\n",s+=r.field("Date stamp")+a[0]+" ERROR\n"):(n+=r.field("Date stamp")+" "+graphChar.repeat(parseInt(a[3]))+"\n",s+=r.field("Date stamp")+" "+a[2].trim()+"\n");return{graph:n.slice(0,-1),log:s.slice(0,-1)}}log("Create symptoms graphs.js 2020-08-06 14:12");
